<span>
  <header>
    <h1>Behind The Curtain</h1>
  </header>

  <section id="summary">
    <nav>
      <details open="">
        <summary>Jump To</summary>
        <a href="#html" title="#html">HTML</a>
        <a href="#css" title="#css">CSS</a>
        <a href="#js" title="#js">JavaScript</a>
        <a href="#conclusion" title="#conclusion">Conclusion</a>
      </details>
    </nav>

    <span>
      <p><abbr title="Hypertext Markup Language">HTML</abbr> is the tool used
      to create this website and all others on the internet. Even the more
      complicated tools like <abbr title="Personal Home Page">PHP</abbr> and
      Microsoft's Blazor become plain old HTML by the time they reach your
      browser</p>
      <p>HTML is rarely used alone, though — it is almost always paired with
      <abbr title="Cascading Style Sheets">CSS</abbr> to do the styling and
      JavaScript to make the site reactive (e.g. buttons, most
      animations)</p>
      <p>There are many other additional tools you can use to make writing
      websites easier and so, <em>so</em> much harder at the same time, such
      as:</p>
      <aside>Click to expand</aside>
      <ul>
        <li>
          <details>
            <summary>React</summary>
            <a href="https://react.dev/"
               title="https://react.dev"
               target="_blank">React</a>
            is a JavaScript library maintained by Meta née Facebook that
            provides tools that let you build websites using HTML 'components'
            defined in JavaScript.
          </details>
        </li>
        <li>
          <details>
            <summary>Bootstrap</summary>
            <a href="https://getbootstrap.com/"
               title="https://getbootstrap.com/"
               target="_blank">Bootstrap</a>
            is a collection of predefined CSS classes that aim to make it
            easier to style mobile-first websites, and is especially known
            for 'flexboxes' that adapt to the screen size to best fit the
            page.
          </details>
        </li>
        <li>
          <details>
            <summary>JQuery</summary>
          </details>
        </li>
      </ul>
      <p>There are tools that extend the functionality of websites using
      dedicated servers, like:</p>
      <ul>
        <li>
          <details>
            <summary>PHP</summary>
          </details>
        </li>
        <li>
          <details>
            <summary>Blazor</summary>
          </details>
        </li>
        <li>
          <details>
            <summary>Node.js</summary>
          </details>
        </li>
      </ul>
      <p>For this website, however, we chose to use only vanilla HTML, CSS, and
      JavaScript in a misguided and quickly abandoned attempt to keep things
      simple.  Read on to learn how we did it!</p>
    </span>
  </section>

  <section id="html">
    <h2>Hypertext Markup Language</h2>

    <span>
      <h3>The Original Tags</h3>
      <dl>
        <dt>h1 Through h6</dt>
        <dd>The tags <code>h1</code> through <code>h6</code> represent
          different levels of headings — <code>h1</code> is the largest (that's
          what's at the top of this page) and <code>h6</code> is the
          smallest.  All headings are typically bolded.</dd>

        <dt>p</dt>
        <dd>The <code>p</code> tag denotes paragraphs, which are separated from
          the elements around them by margins.</dd>

        <dt>a</dt>
        <dd>The <code>a</code> tag is an <q>anchor</q> — a link to another
          page.  It makes use of attributes to store information that isn't
          rendered.  Particularly, it uses <code>href</code> to store the
          target <abbr title="Uniform Resource Locator">URL</abbr>.</dd>

        <dt>ol, ul, li</dt>
        <dd>The list types <code>ol</code> and <code>ul</code> represent
          ordered (numbered) lists and unordered (dashed) lists respectively.
          Entries within both lists should be within the <code>li</code>
          tag.</dd>

        <dt>dl, dt, dd</dt>
        <dd>The <code>dl</code> tag is a little less well-known.  It is a
          <q>definition list</q> and contains sequences of terms —
          <code>dt</code> — followed by definitions — <code>dd</code>.</dd>
      </dl>

      <h3>Head Tags</h3>

      <h3>Other Common Tags</h3>

      <h3>Uncommon Tags</h3>
    </span>

    <aside>
      <h3>HTML</h3>

      <img src="./images/html-logo.png"
           alt="HTML5 logo"
           title="HTML5 logo"
           width="200" />

      <dl>
        <dt>specifies</dt>
        <dd>content</dd>

        <dt>created</dt>
        <dd><time>1993</time></dd>

        <dt>designer</dt>
        <dd>Timothy Berners-Lee</dd>

        <dt>maintainer</dt>
        <dd><abbr title="World Wide Web Consortium">W3C</abbr></dd>
        <dd><abbr title="Web Hypertext Application Technology Working Group"
                  >WHATWG</abbr></dd>
      </dl>
    </aside>
  </section>

  <details>
    <summary>XHTML</summary>
    <section id="xhtml">

      <span>
        <p>You might have noticed a little discrepancy when reading through
        this site — we state that we only use plain old HTML, but if you check
        the file extensions, they say <em>X</em>HTML!  Is XHTML some weird HTML
        framework that changes the way you wrote the page?</p>
        <p>Not quite.  When the HTML you write gets read by a browser, it is
        parsed by some computer program to turn the code into graphics — but
        this program isn't very strict.  There is, however, an
        <em>alternate</em> parser based on
        <abbr title="eXtensible Markup Language">XML</abbr>, another project of
        W3C that is structured similarly to HTML.  This XML parser is very
        exact about what it expects, and if the file isn't 'well-formed' it
        gives an error</p>
        <p>When you use XHTML (or <q>the XML syntax for HTML</q> as it is now
        called) you are informing the browser to read your HTML code like it is
        an XML document.  This means if the parser finds an error in your code,
        it <em>won't</em> render the page at all, while the standard HTML will
        just take a guess at what you <em>probably</em> meant and render the
        page anyway — without giving you any indication that it found an
        error</p>
        <p>There are a few other changes that XHTML makes, but almost all of it
        is commonly taught as good practice for HTML anyway.  Good HTML is
        already 90% of the way to XHTML, and most XHTML is also valid HTML — if
        you code it right, all of it is! (referred to as 'polygot').  This site
        was originally just HTML, but only had to have one line changed to make
        it valid XHTML, for instance</p>
        <p>The list of rules XHTML imposes on HTML — most of which you already
        follow! — are as below:</p>
        <ul>
          <li>
            You most always close your tags — in HTML, if you forget a
            <code data-lang="html">&lt;p&gt;</code>'s closing
            <code data-lang="html">&lt;/p&gt;</code> the parser will insert
            its own closing tag where it thinks one belongs, or just apply
            <code data-lang="html">p</code> styles to everything after.
          </li>
          <li>
            All tags must be lower-case only.
          </li>
          <li>
            All attribute values must be quoted, and no empty attributes
            are allowed — even boolean attributes.  Use
            <code data-lang="html">&lt;details open="open"&gt;</code> or
            <code data-lang="html">&lt;details open=""&gt;</code>, not
            <code data-lang="html">&lt;details open=open&gt;</code> or
            <code data-lang="html">&lt;details open&gt;</code>
          </li>
          <li>
            All tags must be closed, even "self-closing" ones like
            <code data-lang="html">img</code> or
            <code data-lang="html">link</code>. This is done by using a
            <kbd>/</kbd> at the end of the tag, e.g.
            <code data-lang="html">&lt;br /&gt;</code>.
          </li>
          <li>
            All images must have alt text (the
            <code data-lang="html">alt</code> attribute).
          </li>
          <li>
            All pages need a title.
          </li>
          <li>
            The only character entities (<code>&amp;foo;</code> symbols)
            that are defined are <code>amp</code> (<kbd>&amp;</kbd>),
            <code>lt</code> (<kbd>&lt;</kbd>), <code>gt</code>
            (<kbd>&gt;</kbd>), <code>apos</code> (<kbd>&apos;</kbd>), and
            <code>quot</code> (<kbd>&quot;</kbd>). Everything else should be
            the actual UTF-8 character, not a stand-in.
          </li>
        </ul>
        <p>The advantages of XHTML are that it:</p>
        <ul>
          <li>
            Loads faster (doesn't have to do all the error-handling overhead
            HTML does).
          </li>
          <li>
            Saves you from making and missing simple errors that mess with
            site content, and in general forces you to write better code.
          </li>
          <li>
            Is compatible with anything that uses XML — for instance, the
            <code data-lang="js">XMLHttpRequest</code> JavaScript object
            used to query the very page you're reading!
          </li>
        </ul>
        <p>In order to make your page use the XHTML5 parser (available wherever
        HTML5 is, which at the moment is <em>the entire web</em>) you need to
        change the file extension to <code>.xhtml</code> and alter a bit of the
        page preamble:</p>

        <pre><code id="xhtml-example" data-lang="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt;
  &lt;head&gt;
    &lt;meta http-equiv="CONTENT-TYPE" content="application/xhtml+xml; charset=UTF-8" /&gt;

    &lt;title&gt;Page With An XHTML5 Header&lt;/title&gt;
    ...</code></pre>

        <button onclick="copyText(document.getElementById('xhtml-example'))">
          Copy
        </button>

        <p>This links to the authority on what is and isn't valid XHTML (the
        link) and tells the browser to read the page as an XHTML/XML
        application, along with specifying a character set while we're at
        it</p>
      </span>
    </section>
  </details>

  <section id="css">
    <h2>Cascading Style Sheets</h2>

    <span></span>

    <aside>
      <h3>CSS</h3>

      <img src="./images/css-logo.png"
           alt="CSS3 logo https://www.flaticon.com/free-icons/css-3"
           title="CSS3 logo https://www.flaticon.com/free-icons/css-3"
           width="200" />

      <dl>
        <dt>specifies</dt>
        <dd>style</dd>

        <dt>created</dt>
        <dd><time>1996</time></dd>

        <dt>designer</dt>
        <dd>Håkon Wium Lie</dd>

        <dt>maintainer</dt>
        <dd>W3C</dd>
      </dl>
    </aside>
  </section>

  <section id="js">
    <h2>JavaScript</h2>

    <span></span>

    <aside>
      <h3>JavaScript</h3>

      <img src="./images/js-logo.png"
           alt="JavaScript logo"
           title="JavaScript logo"
           width="200" />

      <dl>
        <dt>specifies</dt>
        <dd>reactivity</dd>

        <dt>created</dt>
        <dd><time>1995</time></dd>

        <dt>designer</dt>
        <dd>Brendan Eich</dd>

        <dt>maintainer</dt>
        <dd>Ecma International</dd>
      </dl>
    </aside>
  </section>

  <section id="conclusion">
    <h2>All Together Now!</h2>

    <span></span>
  </section>
</span>
